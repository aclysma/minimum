language: rust
script: cargo build --verbose --package $PACKAGE --no-default-features --features="$FEATURES"
install:
  - if [ $TRAVIS_OS_NAME = windows ]; then choco install ninja; fi
  - if [ $TRAVIS_OS_NAME = windows ]; then choco install python; fi
  - if [ $TRAVIS_OS_NAME = windows ]; then export PATH="C:\Python37:$PATH"; fi
before_script: cd $PACKAGE
matrix:
  include:
    - name: "OSX Game dim2"
      rust: nightly
      os: osx
      env: PACKAGE="minimum-demo" FEATURES="metal dim2"
    - name: "OSX Editor dim2"
      rust: nightly
      os: osx
      env: PACKAGE="minimum-demo" FEATURES="metal editor dim2"
    - name: "Linux Editor dim2"
      rust: nightly
      os: linux
      env: PACKAGE="minimum-demo" FEATURES="vulkan editor dim2"
    - name: "Linux Editor dim3"
      rust: nightly
      os: linux
      env: PACKAGE="minimum-demo" FEATURES="vulkan editor dim3"
    - name: "Windows Editor dim2"
      rust: nightly
      os: windows
      env: PACKAGE="minimum-demo" FEATURES="dx12 editor dim2"
    - name: "OSX Base"
      rust: nightly
      os: osx
      env: PACKAGE="minimum" FEATURES="std"
    - name: "Linux Base"
      rust: nightly
      os: linux
      env: PACKAGE="minimum" FEATURES="std"
    - name: "Windows Base"
      rust: nightly
      os: window
      env: PACKAGE="minimum" FEATURES="std"
    - name: "OSX Base no_std"
      rust: nightly
      os: osx
      env: PACKAGE="minimum" FEATURES=""
    - name: "Linux Base no_std"
      rust: nightly
      os: linux
      env: PACKAGE="minimum" FEATURES=""
    - name: "Windows Base no_std"
      rust: nightly
      os: window
      env: PACKAGE="minimum" FEATURES=""
  fast_finish: true